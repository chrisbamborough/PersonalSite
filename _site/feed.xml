<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Chris Bamborough</title>
    <description>The personal website of Chris Bamborough</description>
    <link>http://www.chrisbamborough.com/</link>
    <atom:link href="http://www.chrisbamborough.com/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Wed, 03 Aug 2016 20:55:12 +1000</pubDate>
    <lastBuildDate>Wed, 03 Aug 2016 20:55:12 +1000</lastBuildDate>
    <generator>Jekyll v3.1.1</generator>
    
      <item>
        <title>Test Project</title>
        <description>&lt;h1 id=&quot;this-is-a-test-post&quot;&gt;This is a test post.&lt;/h1&gt;
</description>
        <pubDate>Tue, 02 Aug 2016 05:45:00 +1000</pubDate>
        <link>http://www.chrisbamborough.com/project/2016/08/02/TestProject.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/project/2016/08/02/TestProject.html</guid>
        
        
        <category>project</category>
        
      </item>
    
      <item>
        <title>Test Project</title>
        <description>&lt;p&gt;Chris Bamborough is a designer and researcher working in the field of architecture.
&lt;br /&gt;
&lt;br /&gt;
This site is a collection of tool explorations and projects. If you want to venture out you can read about his professional &lt;a href=&quot;http://www.linkedin.com/in/chrisbamborough&quot; target=&quot;_blank&quot;&gt;experience&lt;/a&gt;, scroll through his 42 character &lt;a href=&quot;http://www.twitter.com/chrisbamborough&quot; target=&quot;_blank&quot;&gt;musings&lt;/a&gt;, learn about his &lt;a href=&quot;http://www.behance.net/chrisbamborough&quot; target=&quot;_blank&quot;&gt;projects&lt;/a&gt; in more detail, check out his &lt;a href=&quot;http://www.github.com/chrisbamborough&quot;&gt;coding&lt;/a&gt; interests, watch some &lt;a href=&quot;http://www.vimeo.com/chrisbamborough&quot; target=&quot;_blank&quot;&gt;films&lt;/a&gt; he’s made, listen to his &lt;a href=&quot;http://www.soundcloud.com/smoothspace&quot; target=&quot;_blank&quot;&gt;musical&lt;/a&gt; influences, browse his &lt;a href=&quot;http://www.pinterest.com/chrisbamborough&quot; target=&quot;_blank&quot;&gt;visual&lt;/a&gt; inspirations, connect with some of his &lt;a href=&quot;https://uts.academia.edu/ChrisBamborough&quot; target=&quot;_blank&quot;&gt;research&lt;/a&gt;, or learn about some of his current &lt;a href=&quot;https://www.are.na/chris-bamborough/channels&quot; target=&quot;_blank&quot;&gt;ideas&lt;/a&gt;.&lt;/p&gt;

</description>
        <pubDate>Tue, 02 Aug 2016 05:45:00 +1000</pubDate>
        <link>http://www.chrisbamborough.com/about/2016/08/02/About.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/about/2016/08/02/About.html</guid>
        
        
        <category>about</category>
        
      </item>
    
      <item>
        <title>P5.js 3D Perlin Terrain</title>
        <description>&lt;script src=&quot;/js/p5Sketches/P5perlinTerrain.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;

&lt;p&gt;I’ve been watching a lot of the excellent &lt;a href=&quot;https://www.youtube.com/playlist?list=PLRqwX-V7Uu6a-SQiI4RtIwuOrLJGnel0r&quot;&gt;Daniel Shiffman’s coding rainbows&lt;/a&gt; You Tube videos about p5.js.&lt;/p&gt;
</description>
        <pubDate>Thu, 14 Jul 2016 05:45:00 +1000</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/07/14/P5PerlinTerrain.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/07/14/P5PerlinTerrain.html</guid>
        
        <category>Creative</category>
        
        <category>Code,</category>
        
        <category>p5.js</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>P5.js background interactivity</title>
        <description>&lt;script src=&quot;/js/p5Sketches/P5backgroundSketch.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;

&lt;p&gt;The next stage is to create p5 sketches in the background so it isn’t confined to a canvas window within the post. In this post the canvas has simply been assigned to an overall html Div called backgroundCanvas which wraps all the content. As previously the sketch canvas is given the div’s attributes as height and width.&lt;/p&gt;

&lt;p&gt;The p5.js website integrates a background animation through an iFrame positioned to float behind, I’m not sure if this is a better solution or not. Any comments tweet me on &lt;a href=&quot;www.twitter.com/chrisbamborough&quot;&gt;@chrisbamborough&lt;/a&gt;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvasDiv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;backgroundCanvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvasDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divHeight&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvasDiv&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;offsetWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sketchCanvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createCanvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;sketchCanvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;backgroundCanvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseIsPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ellipse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyIsPressed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 11 May 2016 05:45:00 +1000</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/05/11/P5Background.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/05/11/P5Background.html</guid>
        
        <category>Creative</category>
        
        <category>Code,</category>
        
        <category>p5.js</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Using P5.js with Jekyll</title>
        <description>&lt;div id=&quot;postCanvas&quot; style=&quot;position: relative; border: 1px solid black; height: 450px;&quot;&gt;&lt;/div&gt;
&lt;script src=&quot;/js/p5Sketches/firstP5Sketch.js&quot; type=&quot;text/javascript&quot;&gt;&lt;/script&gt;

&lt;p&gt;Press any button to clear the canvas.&lt;/p&gt;

&lt;p&gt;I have been playing around with &lt;a href=&quot;https://processing.org&quot;&gt;processing&lt;/a&gt; for a few years now but never really got stuck in because of the difficulty to share on the web (without annoying aplets). &lt;a href=&quot;https://www.processingjs.org&quot;&gt;Processing.js&lt;/a&gt; offered a way to use processing in the browser, but involved an extra layer of translation from java (processing) into javascript. Enter &lt;a href=&quot;https://www.p5js.org&quot;&gt;p5.js&lt;/a&gt;, the intuition of processing but using native java script in the browser.&lt;/p&gt;

&lt;p&gt;The P5 series of javascript &lt;a href=&quot;https://p5js.org/libraries/&quot;&gt;libraries&lt;/a&gt; provide means to play with the DOM (Document Object Model), Sound, Interaction, Data streams, Image, Video to name just a few.&lt;/p&gt;

&lt;p&gt;So I have been playing with the P5.js IDE which has a built in web-server, but I wanted to start publishing my experiments to this site. As it is a jekyll site and posts are written in markdown I had to find a work around.&lt;/p&gt;

&lt;p&gt;The first thing to do was include the p5.js libraries into the head of the Jekyll site. In header.html;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;      &lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
          &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/js/p5.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
      &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Previously in my failed ambition to replicate the Nature Of Code book using straight java script, I was pointing my javascript to an HTML canvas element in the markdown post. As P5 deals with creating a canvas itself, I simply used a div with an id myCanvas to provide a placeholder for a canvas created in javascript.&lt;/p&gt;

&lt;p&gt;Jekyll works by writing posts in markdown, which then get compiled into HTML with css styling. The great thing about markdown is that you can throw in html and javascript in amongst and it will render it to the page. As mentioned above I first needed a div for my canvas, then a link to my .js sketch file.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;div&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myCanvas&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/div&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;/js/p5Sketches/firstP5Sketch.js&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;In the .js sketch file p5 allows you to structure your code along the logic of a processing sketch with a setup() (runs once) and draw() (loops continuously). The only difference is that preceding “void” is replaced by “function”. In the setup a new canvas is placed using a variable used to then call p5 methods and access their elements from the &lt;a href=&quot;http://p5js.org/reference/#/p5.Element&quot;&gt;library&lt;/a&gt;. See the &lt;a href=&quot;https://github.com/processing/p5.js/wiki/Beyond-the-canvas&quot;&gt;github repository&lt;/a&gt; for more details.&lt;/p&gt;

&lt;p&gt;The above example sketch is the one included in the &lt;a href=&quot;https://p5js.org/get-started/&quot;&gt;getting started&lt;/a&gt; section of the website, so I need to get a bit more creative, but its a good simple sketch to try and integrate. The only difference is that in the setup I needed to assign a variable to createCanvas() to point it towards my located div. Alternatively I could have set up the canvas and position it within the javascript, but I prefer to use CSS to take care all of that.&lt;/p&gt;

&lt;p&gt;There is a slight quirk with my approach that means the p5 sketch extends slightly further in width that the div wrapper. I attempted to use the div client width as the width of the canvas but the two do not quite correlate. If you have any advice on this please tweet me on @chrisbamborough&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;setup&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvasDiv&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myCanvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;divWidth&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myCanvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;clientWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
  &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;sketchCanvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;createCanvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;divWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;450&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;sketchCanvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;myCanvas&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;draw&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseIsPressed&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;fill&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;255&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
  &lt;span class=&quot;nx&quot;&gt;ellipse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;mouseX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;mouseY&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;40&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;

  &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;keyIsPressed&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;kc&quot;&gt;true&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;clear&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Sat, 30 Apr 2016 05:45:00 +1000</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/04/30/P5InJekyll.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/04/30/P5InJekyll.html</guid>
        
        <category>Creative</category>
        
        <category>Code,</category>
        
        <category>p5.js</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Mesh Box</title>
        <description>&lt;p&gt;While I have been experimenting with the HTML5 Canvas and WebGL capabilities I’ve had trouble sharing the graphical output of my code. So after messing around trying to get Three.js and Jekyll to play nice, I opted for embedding a code pen player.&lt;/p&gt;

&lt;p&gt;The outcome is pretty good and means the HTML, CSS and Javascript can be referenced along with the animation.&lt;/p&gt;

&lt;p data-height=&quot;319&quot; data-theme-id=&quot;8227&quot; data-slug-hash=&quot;aIbeu&quot; data-default-tab=&quot;result&quot; data-user=&quot;chrisbamborough&quot; class=&quot;codepen&quot;&gt;See the Pen &lt;a href=&quot;http://codepen.io/chrisbamborough/pen/aIbeu/&quot;&gt;Simple Green Box&lt;/a&gt; by Chris Bamborough (&lt;a href=&quot;http://codepen.io/chrisbamborough&quot;&gt;@chrisbamborough&lt;/a&gt;) on &lt;a href=&quot;http://codepen.io&quot;&gt;CodePen&lt;/a&gt;.&lt;/p&gt;
&lt;script async=&quot;&quot; src=&quot;//assets.codepen.io/assets/embed/ei.js&quot;&gt;&lt;/script&gt;

</description>
        <pubDate>Sat, 13 Feb 2016 23:00:00 +1100</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/02/13/MeshBox.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/02/13/MeshBox.html</guid>
        
        <category>Creative</category>
        
        <category>Code,</category>
        
        <category>Three.js</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Random Walkers</title>
        <description>&lt;canvas id=&quot;myCanvas&quot; width=&quot;845px&quot; height=&quot;450px&quot; style=&quot;border:1px solid #000000;&quot;&gt;
&lt;/canvas&gt;

&lt;script&gt;
// put code in an overall function
window.onload = function () {
    var canvas = document.getElementById(&#39;myCanvas&#39;);
    var ctx = canvas.getContext(&#39;2d&#39;);
    var width = canvas.width;
    var height = canvas.height;
    var step = 5;

    // walker object
    var Walker = function() {
        this.x = width / 2;
        this.y = height / 2;

        Walker.prototype.display = function() {
            ctx.rect(this.x,this.y,1,1);
            ctx.stroke();
            ctx.fill();
        }

        Walker.prototype.walk = function () {
            var choice = Math.random();

            if (choice &gt;= 0 &amp;&amp; choice &lt; 0.25) {
                this.x = this.x + step;
            } else if (choice &gt;= 0.25 &amp;&amp; choice &lt; 0.5) {
                this.x = this.x - step;
            } else if (choice &gt;= 0.5 &amp;&amp; choice &lt; 0.75) {
                this.y += step;
            } else {
                this.y -= step;
            }
        }
    }
    // initialise a walker object
    var w = new Walker();

    // run draw function
    setInterval(draw, 10);

    function draw() {
        w.walk();
        w.display();
    }


};

&lt;/script&gt;

&lt;p&gt;This is a little bit backward but I started with section 1 in Nature Of Code as I didn’t know how to create objects in Java Script but this is the stage where this happened.&lt;/p&gt;

&lt;p&gt;As before the html file is set up to reference a javascript file and creates a canvas.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;title&amp;gt;&lt;/span&gt;Random Walker&lt;span class=&quot;nt&quot;&gt;&amp;lt;/title&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NOC_0_1_RandomWalker.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;canvas&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;For the javascript the function is set up to load as the window is opened and then the variables initialised.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;onload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
        &lt;span class=&quot;s2&quot;&gt;&quot;use strict&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;// initialise canvas&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;document&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getElementById&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;canvas&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;ctx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;getContext&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&#39;2d&#39;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;width&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerWidth&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;canvas&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;height&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;innerHeight&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
        &lt;span class=&quot;kd&quot;&gt;var&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The next step is to create a walker object that has information on how to behave, in this case how to display, and then how to walk. The most significant difference here between processing and javascript is that js does not have a random function that you can input ranges, it only outputs a float between 0-1. As a result the walk function needs a series of conditionals to test wether than random number generated fell between a certain range.&lt;/p&gt;

&lt;p&gt;~~~ Javascript
     // walker object
        var Walker = function() {
            this.x = width / 2;
            this.y = height / 2;&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;        Walker.prototype.display = function() {
            ctx.rect(this.x,this.y,1,1);
            ctx.stroke();
            ctx.fill();
        }

        Walker.prototype.walk = function () {
            var choice = Math.random();

            if (choice &amp;gt;= 0 &amp;amp;&amp;amp; choice &amp;lt; 0.25) {
                this.x = this.x + step;
            } else if (choice &amp;gt;= 0.25 &amp;amp;&amp;amp; choice &amp;lt; 0.5) {
                this.x = this.x - step;
            } else if (choice &amp;gt;= 0.5 &amp;amp;&amp;amp; choice &amp;lt; 0.75) {
                this.y += step;
            } else {
                this.y -= step;
            }
        }
    }  
    ~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Finally to create a walker the object must be instantiated, a draw function created to call the objects functions, and a call to run the draw function.&lt;/p&gt;

&lt;p&gt;~~~ Javascript
    // initialise a walker object
        var w = new Walker();&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    // run draw function
    setInterval(draw, 10);

    function draw() {
        w.walk();
        w.display();
    }


};
~~~
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Wed, 13 Jan 2016 23:00:00 +1100</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/01/13/RandomWalkers.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/01/13/RandomWalkers.html</guid>
        
        <category>Creative</category>
        
        <category>Code</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>The Nature Of Canvas</title>
        <description>&lt;canvas id=&quot;myCanvas&quot; width=&quot;845px&quot; height=&quot;450px&quot; style=&quot;border:1px solid #000000;&quot;&gt;
&lt;/canvas&gt;
&lt;script&gt;
// put code in an overall function
window.onload = function () {
    var canvas = document.getElementById(&#39;myCanvas&#39;);
    var context = canvas.getContext(&#39;2d&#39;);
    var width = canvas.width;
    var height = canvas.height;
    var x = 100;
    var y = 100;
    var xspeed = 5;
    var yspeed = 5;


    setInterval(draw,10);



    function draw () {

        context.clearRect(0,0,width,height);
        context.beginPath();
        context.fillStyle = &quot;#000ff&quot;;
        context.arc(x, y, 20,0, Math.PI * 2, true);
        context.fill();

        if (x &gt; width || x &lt; 0) {
            xspeed = -xspeed;
        }
        if (y &gt; height || y &lt; 0) {
            yspeed = -yspeed;
        }

        x+=xspeed;
        y+=yspeed;
    }
}
&lt;/script&gt;

&lt;p&gt;When I first started learning &lt;a href=&quot;http://processing.org&quot;&gt;Processing&lt;/a&gt; a few years ago I was drawn to Daniel Shiffman’s book &lt;a href=&quot;http://www.learningprocessing.com/&quot;&gt;“Learning Processing”&lt;/a&gt; because he did such a great job at explaining the basics without you feeling like a dumb ass. After this first book Shiffman developed a self published &lt;a href=&quot;http://natureofcode.com/&quot;&gt;Nature Of Code&lt;/a&gt; project shaped as a sylabus for his Introduction to Computational media course at &lt;a href=&quot;http://admin.tisch.nyu.edu/object/ShiffmanD.html&quot;&gt;ITP New York&lt;/a&gt; .&lt;/p&gt;

&lt;p&gt;His Nature Of Code course simply aims to simulate things that naturally occur in the physical world via Processing. As Processing is based on the java script language I’ve became interested in using it to learn Javascript programing in Canvas.&lt;/p&gt;

&lt;p&gt;I’m going to work through the examples Shiffman uses in the book so to start,&lt;/p&gt;

&lt;p&gt;Chapter 1 Vectors
1_bouncingball_novectors&lt;/p&gt;

&lt;p&gt;This first example in the book aims to move a book around the screen using a constant updating of the ball’s x and y location.&lt;/p&gt;

&lt;p&gt;To start off an html file must link to a javascript file in the head tags, before setting up a canvas in the body, in this case sized 500px x 500px.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;    &lt;span class=&quot;nt&quot;&gt;&amp;lt;html&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;head&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;script &lt;/span&gt;&lt;span class=&quot;na&quot;&gt;type=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;text/javascript&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;src=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;NOC_1_1_BouncingBall_NoVectors.js&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/script&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/head&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;body&amp;gt;&lt;/span&gt;
        &lt;span class=&quot;nt&quot;&gt;&amp;lt;canvas&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;myCanvas&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;width =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;500&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;height =&lt;/span&gt;&lt;span class=&quot;err&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;500&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&amp;lt;/canvas&amp;gt;&lt;/span&gt;
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/body&amp;gt;&lt;/span&gt;  
    &lt;span class=&quot;nt&quot;&gt;&amp;lt;/html&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;Within the javascript file firstly the script needs to be launched on loading of the webpage. A variable canvas which fetches the myCanvas element in the html must allways be called, and a context must be set up, in this case it is using the built in HTML5 2d library.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// put code in an overall function
window.onload = function () {
    var canvas = document.getElementById(&#39;myCanvas&#39;);
    var context = canvas.getContext(&#39;2d&#39;);
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;The neccessary variables must be set up for a bounding ball.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// put code in an overall function
window.onload = function () {
    var canvas = document.getElementById(&#39;myCanvas&#39;);
    var context = canvas.getContext(&#39;2d&#39;);
    var width = canvas.width = window.innerWidth;
    var height = canvas.height = window.innerHeight;
    var x = 100;
    var y = 100;
    var xspeed = 5;
    var yspeed = 5;
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;

&lt;p&gt;which will be used in a draw function similar to a processing sketch. In order for the run function to work though a setInterval(draw,10); command must be used to set up the drawing routine “draw” with a framerate of 10.&lt;/p&gt;

&lt;p&gt;Then the draw function can be called. Comments are after the // marks.&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;// put code in an overall function
window.onload = function () {
    var canvas = document.getElementById(&#39;myCanvas&#39;);
    var context = canvas.getContext(&#39;2d&#39;);
    var width = canvas.width = window.innerWidth;
    var height = canvas.height = window.innerHeight;
    var x = 100;
    var y = 100;
    var xspeed = 5;
    var yspeed = 5;


    setInterval(draw,10);

    // function to draw
    function draw () {

    	//clear the background each frame              		
    	context.clearRect(0,0,width,height);
        // Start the path for the circle
        context.beginPath();
        // Indicate what colour to fill the circle
        context.fillStyle = &quot;#000ff&quot;;
        // describe the circle using the arc function
        context.arc(x, y, 20,0, Math.PI * 2, true);
        // Fill the shape
        context.fill();

        // if statements to detect the shapes proximity to the edge of the canvas
        to make object rebound with opposite change in x and y direction.
        if (x &amp;gt; width || x &amp;lt; 0) {
            xspeed = -xspeed;
        }
        if (y &amp;gt; height || y &amp;lt; 0) {
            yspeed = -yspeed;
        }

		// finally make the ball move by adding a variable &quot;speed&quot; to the x and y position
        x+=xspeed;
        y+=yspeed;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 12 Jan 2016 23:00:00 +1100</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/01/12/NOC.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/01/12/NOC.html</guid>
        
        <category>Creative</category>
        
        <category>Code</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Improved Random Walkers</title>
        <description>&lt;style&gt;  
.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
&lt;/style&gt;

&lt;canvas id=&quot;myCanvas&quot; width=&quot;845px&quot; height=&quot;450px&quot; style=&quot;border:1px solid #000000;&quot;&gt;
&lt;/canvas&gt;

&lt;script&gt;
// put code in an overall function
window.onload = function () {
    &quot;use strict&quot;;
    var canvas = document.getElementById(&#39;myCanvas&#39;);    
  	canvas.style.width =&#39;100%&#39;;
  	canvas.style.height=&#39;100%&#39;;
  	canvas.width  = canvas.offsetWidth;
  	canvas.height = canvas.offsetHeight;    
    var ctx = canvas.getContext(&#39;2d&#39;);
    var width = canvas.width;
    var height = canvas.height;
    var step = 5;

    // walker object
    var Walker = function () {
        this.x = width / 2;
        this.y = height / 2;

        Walker.prototype.display = function() {
            ctx.rect(this.x,this.y,2,2);
            ctx.stroke();
            ctx.fill();
        }

        Walker.prototype.walk = function () {
        	var choice = Math.random();

            var stepx = Math.random(); // value 0-1
            var stepy = Math.random();

            if (stepx &gt;= 0 &amp;&amp; stepx &lt; 0.33) {
                stepx = -1;
            } else if (stepx &gt;= 0.33 &amp;&amp; stepx &lt; 0.66) {
                stepx = 0;
            } else {
                stepx = 1;
            }

            if (stepy &gt;= 0 &amp;&amp; stepy &lt; 0.33) {
                stepy = -1;
            } else if (stepy &gt;= 0.33 &amp;&amp; stepy &lt; 0.66) {
                stepy = 0;
            } else {
                stepy = 1;
            }

            this.x += stepx*step
            this.y += stepy*step
        }
        }

        // initialise a walker object
        var w = new Walker();

        // run draw function
        setInterval(draw, 10);

        function draw() {
            w.walk();
            w.display();
        }
    };
&lt;/script&gt;

&lt;p&gt;The point of improvement in the ImprovedVectorWalker is the conditional that “controls” the randomness. In the previous example the test gave the random walker a choice of 4 directions (2 for x and 2 for y), this time it has 9 choices (3 for x and 3 for y). To do this a separate random number needs to be generated for both x and y, then each is tested to see if it falls within a range between 0 and 1 (remember java script random gives a random number between 0-1).&lt;/p&gt;

&lt;div class=&quot;highlighter-rouge&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  // walker object
  var Walker = function () {
      this.x = width / 2;
      this.y = height / 2;

      Walker.prototype.display = function () {
          ctx.rect(this.x, this.y, 1, 1);
          ctx.stroke();
          ctx.fill();
      }

      Walker.prototype.walk = function () {
          // improved movement
          var stepx = Math.random(); // value 0-1
          var stepy = Math.random();

          if (stepx &amp;gt;= 0 &amp;amp;&amp;amp; stepx &amp;lt; 0.33) {
              stepx = -1;
          } else if (stepx &amp;gt;= 0.33 &amp;amp;&amp;amp; stepx &amp;lt; 0.66) {
              stepx = 0;
          } else {
              stepx = 1;
          }

          if (stepy &amp;gt;= 0 &amp;amp;&amp;amp; stepy &amp;lt; 0.33) {
              stepy = -1;
          } else if (stepy &amp;gt;= 0.33 &amp;amp;&amp;amp; stepy &amp;lt; 0.66) {
              stepy = 0;
          } else {
              stepy = 1;
          }

          this.x += stepx;
          this.y += stepy;

      }
&lt;/code&gt;&lt;/pre&gt;
&lt;/div&gt;
</description>
        <pubDate>Tue, 12 Jan 2016 23:00:00 +1100</pubDate>
        <link>http://www.chrisbamborough.com/blog/2016/01/12/ImprovedRandomWalkers.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2016/01/12/ImprovedRandomWalkers.html</guid>
        
        <category>Creative</category>
        
        <category>Code</category>
        
        
        <category>blog</category>
        
      </item>
    
      <item>
        <title>Getting Architectural</title>
        <description>&lt;p&gt;The role of the architect is a hot topic these days. The gradual demise of the architect’s influence and agency within the building industry even provides enough content for &lt;a href=&quot;http://handbook.uts.edu.au/subjects/11503.html&quot;&gt;university course electives&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When I read &lt;a href=&quot;http://www.fashionarchitecturetaste.com/people.html&quot;&gt;Sam Jacob’s&lt;/a&gt; &lt;a href=&quot;http://www.dezeen.com/2014/01/16/opinion-sam-jacob-how-architecture-can-regain-social-significance/&quot;&gt;opinion piece&lt;/a&gt; in Dezeen recently he commented that “(Architecture) might have to (or better, want to) learn from communications agencies, from advertising, from digital and interaction design and from research and innovation experts”. This got me thinking, I currently work at &lt;a href=&quot;http://www.supermanoeuvre.com&quot;&gt;&lt;em&gt;supermanoeuvre&lt;/em&gt;&lt;/a&gt; who straddle the worlds of architectural practice and academic research and innovation, what do we bring to the profession and does it reinforce Jacob’s view?&lt;/p&gt;

&lt;p&gt;An added interest for me also stems from my previous life in digital communications working for the extremely talented &lt;a href=&quot;http://www.profero.com&quot;&gt;Profero&lt;/a&gt;. So given my position it seems reasonable to analyse whether Sam Jacob is onto something?&lt;/p&gt;

&lt;p&gt;Firstly digital communications is a very young industry but one that is not afraid to reinvent its boundaries in which to utilise its talents. Whilst I was at Profero it changed from a digital media company, to digital advertising, to digital marketing, to digital communications and it currently identifies itself as a “Digital Marketing agency and online advertising house”. I left in 2005 at a time when people were realising that traditional approaches to marketing and advertising simply forced onto the web was not going to work. From this point Profero moved towards it’s biggest successes and carved an identity as a creator of ideas and experiences. This is not isolated to just Profero, other web design creative houses such as &lt;a href=&quot;http://www.pokelondon.com/&quot;&gt;Poke&lt;/a&gt; and &lt;a href=&quot;http://clearleft.com/&quot;&gt;Clear Left&lt;/a&gt; view experience, research and communication as paramount to their success. This is where digital platform design output moved from a product i.e. websites, to a set of diffuse design activities as I feel Sam Jacob accurately identified. What those in successful creative agencies realised is that experience is not only as important for the end user and sale but also the client and even intermediary partners, for instance media owners.&lt;/p&gt;

&lt;p&gt;So simple, Architecture just needs to concentrate more on the experiences they create in their designs and justify their significance through analysis of satisfaction and publicity right? Unfortunately I don’t think it is this simple as Architecture and Digital Design are far from comparable fields.&lt;/p&gt;

&lt;p&gt;In the digital realm clients approach the creative services to craft ideas/ messages/experiences in which to influence customers, and in the end ultimately sell something to. Digital communications can one way or another achieve this over a range of timescales and quantify its influence in the process by extremely accurate cookie data tracking and embedded analytics. Design is seen as critical within this because they can easily prove with quantities that as the former improves so does the latter. There is no threat of a web developer simply taking on production without creative input to make it cheaper because it is recognised that the outcome will not be as successful and not as cost effective as involving the whole process.&lt;/p&gt;

&lt;p&gt;With Architecture there is very rarely a final transaction that can be pinpointed (maybe with retail space design) in which to focus the success of design, it is far more open ended with the possibility of multiple scales, uses, cultures and stakeholders with individual aims in mind. Instead I think Architecture needs to get more architectural, but get smart with it. In order for Architecture to gain more significance in this neo liberal capital systems we are inadvertently part of it needs to prove that its design output be it ideas, experiences, buildings, systems, softwares, creates more return on investment (economic, social, cultural capital) than a standard solution.&lt;/p&gt;

&lt;p&gt;We in the industry need to develop more contemporary tools for the measurement of architecture’s success, it is the wicked problem of quantifying aesthetics but I think rather than focussing on money and capital gain the focus is shifted onto cultural and social influence. The one thing that sets the digital communications work apart is their use of the web and networked technologies. What if architects were to build in a process of post project success analysis using exposure on social media and image aggregations to justify its effective impact. This wouldn’t see a dilution of the Architects already weakened position across diffused non spatial services, but rather develop a capitalist language about the benefits of quality designed space that potential commissioners of space value and understand.&lt;/p&gt;
</description>
        <pubDate>Sat, 01 Feb 2014 23:00:00 +1100</pubDate>
        <link>http://www.chrisbamborough.com/blog/2014/02/01/GettingArchitectural.html</link>
        <guid isPermaLink="true">http://www.chrisbamborough.com/blog/2014/02/01/GettingArchitectural.html</guid>
        
        <category>Architecture</category>
        
        
        <category>blog</category>
        
      </item>
    
  </channel>
</rss>
