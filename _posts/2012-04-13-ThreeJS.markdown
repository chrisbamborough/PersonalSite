---
layout: post
title:  "Three.js Animation"
date:   2012-04-13 12:00:00
categories: blog
tags: Creative Code
image:
---
I'm continuing to try out the examples in "Learning Three.js" by working through the code and attempting to get live on this blog. This is the first scene described in the book but with some animation thrown in and the use of a stats counter in the top left hand corner.

<style>  
.axis path,
.axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}
</style>

<script>
		// add some stats
        var stats = initStats();

        // create the scene
        var scene = new THREE.Scene();
        var camera = new THREE.PerspectiveCamera(45, window.innerWidth / window.innerHeight, 1, 1000);
        // position and point the camera
        camera.position.x = -30;
        camera.position.y = 40;
        camera.position.z = 30;
        camera.lookAt(scene.position);
        // create a renderer
        var renderer = new THREE.WebGLRenderer();
        renderer.setClearColor(0xEEEEEE);
        renderer.setSize(window.innerWidth, window.innerHeight);
        document.body.appendChild(renderer.domElement);

        // create ground plane
        var planeGeometry = new THREE.PlaneGeometry(60,20);
        var planeMaterial = new THREE.MeshBasicMaterial();
        var plane = new THREE.Mesh(planeGeometry,planeMaterial);
        // rotate and position the plane
        plane.rotation.x=-0.5*Math.PI;
        plane.position.x=15
        plane.position.y=0
        plane.position.z=0
        // add the plane to the scene
        scene.add(plane);

		// create a cube
        var geometry = new THREE.CubeGeometry(4, 4, 4);
        var material = new THREE.MeshBasicMaterial({color: 0xff0000, wireframe:true});
        var cube = new THREE.Mesh(geometry, material);
        // position the cube
        cube.position.x=-4;
        cube.position.y=3;
        cube.position.z=0;
        scene.add(cube);

        // create a sphere
        var sphereGeometry = new THREE.SphereGeometry(4,20,20);
        var sphereMaterial = new THREE.MeshBasicMaterial({color: 0x7777ff, wireframe: true});
        var sphere = new THREE.Mesh(sphereGeometry,sphereMaterial);
        // position the sphere
        sphere.position.x=20;
        sphere.position.y=4;
        sphere.position.z=2;
        // add the sphere to the scene
        scene.add(sphere);

        // add an axis
        var axis = new THREE.AxisHelper(20);
        scene.add(axis);

		var step = 0;

         // need a render loop
        function render() {
        	stats.update();

            requestAnimationFrame(render);
            renderer.render(scene, camera);

            // bounce the sphere
            step += 0.04;
            sphere.position.x = 20 + (10*(Math.cos(step)));
            sphere.position.y = 2 + (10*Math.abs(Math.sin(step)));

            // rotate cube
            cube.rotation.x += 0.01;
            cube.rotation.y += 0.01;
        }

        render();

        function initStats(){
            var stats = new Stats();
            stats.setMode(0);

            stats.domElement.style.position = 'absolute';
            stats.domElement.style.left = '0px';
            stats.domElement.style.top = '0px';
            document.body.appendChild( stats.domElement );
                return stats;
        }



    </script>
